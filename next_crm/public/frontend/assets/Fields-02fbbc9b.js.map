{"version":3,"file":"Fields-02fbbc9b.js","sources":["../../../../frontend/src/components/Fields.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-4\">\n    <div\n      v-for=\"section in sections\"\n      :key=\"section.label\"\n      class=\"section first:border-t-0 first:pt-0\"\n      :class=\"section.hideBorder ? '' : 'border-t pt-4'\"\n    >\n      <div\n        v-if=\"!section.hideLabel\"\n        class=\"flex h-7 mb-3 max-w-fit cursor-pointer items-center gap-2 text-base font-semibold leading-5\"\n      >\n        {{ section.label }}\n      </div>\n      <div\n        class=\"grid gap-4\"\n        :class=\"\n          section.columns\n            ? 'grid-cols-' + section.columns\n            : 'grid-cols-2 sm:grid-cols-3'\n        \"\n      >\n        <div v-for=\"field in section.fields\" :key=\"field.name\">\n          <div\n            class=\"settings-field\"\n            v-if=\"\n              (field.type == 'Check' ||\n                (field.read_only && data[field.name]) ||\n                !field.read_only ||\n                !field.hidden) &&\n              (!field.depends_on || field.display_via_depends_on)\n            \"\n          >\n            <div\n              v-if=\"field.type != 'Check'\"\n              class=\"mb-2 text-sm text-gray-600\"\n            >\n              {{ __(field.label) }}\n              <span\n                class=\"text-red-500\"\n                v-if=\"\n                  field.mandatory ||\n                  (field.mandatory_depends_on && field.mandatory_via_depends_on)\n                \"\n                >*</span\n              >\n            </div>\n            <FormControl\n              v-if=\"field.read_only && field.type !== 'Check'\"\n              type=\"text\"\n              :placeholder=\"getPlaceholder(field)\"\n              v-model=\"data[field.name]\"\n              :disabled=\"true\"\n            />\n            <FormControl\n              v-else-if=\"field.type === 'Select'\"\n              type=\"select\"\n              class=\"form-control\"\n              :class=\"field.prefix ? 'prefix' : ''\"\n              :options=\"field.options\"\n              v-model=\"data[field.name]\"\n              :placeholder=\"getPlaceholder(field)\"\n            >\n              <template v-if=\"field.prefix\" #prefix>\n                <IndicatorIcon :class=\"field.prefix\" />\n              </template>\n            </FormControl>\n            <div\n              v-else-if=\"field.type == 'Check'\"\n              class=\"flex items-center gap-2\"\n            >\n              <FormControl\n                class=\"form-control\"\n                type=\"checkbox\"\n                v-model=\"data[field.name]\"\n                @change=\"(e) => (data[field.name] = e.target.checked)\"\n                :disabled=\"Boolean(field.read_only)\"\n              />\n              <label\n                class=\"text-sm text-gray-600\"\n                @click=\"data[field.name] = !data[field.name]\"\n              >\n                {{ __(field.label) }}\n                <span class=\"text-red-500\" v-if=\"field.mandatory\">*</span>\n              </label>\n            </div>\n            <div class=\"flex gap-1\" v-else-if=\"field.type === 'Link'\">\n              <Link\n                class=\"form-control flex-1\"\n                :value=\"data[field.name]\"\n                :doctype=\"field.options\"\n                :filters=\"field.filters\"\n                @change=\"(v) => (data[field.name] = v)\"\n                :placeholder=\"getPlaceholder(field)\"\n                :onCreate=\"field.create\"\n              />\n              <Button\n                v-if=\"data[field.name] && field.edit\"\n                class=\"shrink-0\"\n                :label=\"__('Edit')\"\n                @click=\"field.edit(data[field.name])\"\n              >\n                <template #prefix>\n                  <EditIcon class=\"h-4 w-4\" />\n                </template>\n              </Button>\n            </div>\n\n            <Link\n              v-else-if=\"field.type === 'User'\"\n              class=\"form-control\"\n              :value=\"getUser(data[field.name]).full_name\"\n              :doctype=\"field.options\"\n              :filters=\"field.filters\"\n              @change=\"(v) => (data[field.name] = v)\"\n              :placeholder=\"getPlaceholder(field)\"\n              :hideMe=\"true\"\n            >\n              <template #prefix>\n                <UserAvatar class=\"mr-2\" :user=\"data[field.name]\" size=\"sm\" />\n              </template>\n              <template #item-prefix=\"{ option }\">\n                <UserAvatar class=\"mr-2\" :user=\"option.value\" size=\"sm\" />\n              </template>\n              <template #item-label=\"{ option }\">\n                <Tooltip :text=\"option.value\">\n                  <div class=\"cursor-pointer\">\n                    {{ getUser(option.value).full_name }}\n                  </div>\n                </Tooltip>\n              </template>\n            </Link>\n            <DateTimePicker\n              v-else-if=\"field.type === 'Datetime'\"\n              v-model=\"data[field.name]\"\n              :placeholder=\"getPlaceholder(field)\"\n              input-class=\"border-none\"\n            />\n            <DatePicker\n              v-else-if=\"field.type === 'Date'\"\n              v-model=\"data[field.name]\"\n              :placeholder=\"getPlaceholder(field)\"\n              input-class=\"border-none\"\n            />\n            <FormControl\n              v-else-if=\"\n                ['Small Text', 'Text', 'Long Text'].includes(field.type)\n              \"\n              type=\"textarea\"\n              :placeholder=\"getPlaceholder(field)\"\n              v-model=\"data[field.name]\"\n            />\n            <FormControl\n              v-else-if=\"['Int'].includes(field.type)\"\n              type=\"number\"\n              :placeholder=\"getPlaceholder(field)\"\n              v-model=\"data[field.name]\"\n            />\n            <FormControl\n              v-else\n              type=\"text\"\n              :placeholder=\"getPlaceholder(field)\"\n              v-model=\"data[field.name]\"\n              :disabled=\"Boolean(field.read_only)\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport { usersStore } from '@/stores/users'\nimport { Tooltip, DatePicker, DateTimePicker } from 'frappe-ui'\n\nconst { getUser } = usersStore()\n\nconst props = defineProps({\n  sections: Array,\n  data: Object,\n})\n\nconst getPlaceholder = (field) => {\n  if (field.placeholder) {\n    return __(field.placeholder)\n  }\n  if (['Select', 'Link'].includes(field.type)) {\n    return __('Select {0}', [__(field.label)])\n  } else {\n    return __('Enter {0}', [__(field.label)])\n  }\n}\n</script>\n\n<style scoped>\n:deep(.form-control.prefix select) {\n  padding-left: 2rem;\n}\n\n.section {\n  display: none;\n}\n\n.section:has(.settings-field) {\n  display: block;\n}\n</style>\n"],"names":["getUser","usersStore","getPlaceholder","field"],"mappings":"oyBAoLA,KAAM,CAAE,QAAAA,CAAS,EAAGC,EAAY,EAO1BC,EAAkBC,GAClBA,EAAM,YACD,GAAGA,EAAM,WAAW,EAEzB,CAAC,SAAU,MAAM,EAAE,SAASA,EAAM,IAAI,EACjC,GAAG,aAAc,CAAC,GAAGA,EAAM,KAAK,CAAC,CAAC,EAElC,GAAG,YAAa,CAAC,GAAGA,EAAM,KAAK,CAAC,CAAC"}