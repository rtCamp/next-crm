{"version":3,"file":"Contact-ad9be63c.js","sources":["../../../../frontend/src/pages/Contact.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"contact.data\">\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n    </template>\n  </LayoutHeader>\n  <div ref=\"parentRef\" class=\"flex h-full\">\n    <Resizer\n      v-if=\"contact.data\"\n      :parent=\"$refs.parentRef\"\n      class=\"flex h-full flex-col overflow-hidden border-r\"\n    >\n      <div class=\"border-b\">\n        <FileUploader\n          @success=\"changeContactImage\"\n          :validateFile=\"validateFile\"\n        >\n          <template #default=\"{ openFileSelector, error }\">\n            <div class=\"flex flex-col items-start justify-start gap-4 p-5\">\n              <div class=\"flex gap-4 items-center\">\n                <div class=\"group relative h-15.5 w-15.5\">\n                  <Avatar\n                    size=\"3xl\"\n                    class=\"h-15.5 w-15.5\"\n                    :label=\"contact.data.full_name\"\n                    :image=\"contact.data.image\"\n                  />\n                  <component\n                    :is=\"contact.data.image ? Dropdown : 'div'\"\n                    v-bind=\"\n                      contact.data.image\n                        ? {\n                            options: [\n                              {\n                                icon: 'upload',\n                                label: contact.data.image\n                                  ? __('Change image')\n                                  : __('Upload image'),\n                                onClick: openFileSelector,\n                              },\n                              {\n                                icon: 'trash-2',\n                                label: __('Remove image'),\n                                onClick: () => changeContactImage(''),\n                              },\n                            ],\n                          }\n                        : { onClick: openFileSelector }\n                    \"\n                    class=\"!absolute bottom-0 left-0 right-0\"\n                  >\n                    <div\n                      class=\"z-1 absolute bottom-0 left-0 right-0 flex h-14 cursor-pointer items-center justify-center rounded-b-full bg-black bg-opacity-40 pt-5 opacity-0 duration-300 ease-in-out group-hover:opacity-100\"\n                      style=\"\n                        -webkit-clip-path: inset(22px 0 0 0);\n                        clip-path: inset(22px 0 0 0);\n                      \"\n                    >\n                      <CameraIcon class=\"h-6 w-6 cursor-pointer text-white\" />\n                    </div>\n                  </component>\n                </div>\n                <div class=\"flex flex-col gap-2 truncate\">\n                  <div class=\"truncate text-2xl font-medium\">\n                    <span v-if=\"contact.data.salutation\">\n                      {{ contact.data.salutation + '. ' }}\n                    </span>\n                    <span>{{ contact.data.full_name }}</span>\n                  </div>\n                  <div\n                    v-if=\"contact.data.company_name\"\n                    class=\"flex items-center gap-1.5 text-base text-gray-800\"\n                  >\n                    <Avatar\n                      size=\"xs\"\n                      :label=\"contact.data.company_name\"\n                      :image=\"\n                        getCustomer(contact.data.company_name)\n                          ?.image\n                      \"\n                    />\n                    <span class=\"\">{{ contact.data.company_name }}</span>\n                  </div>\n                  <ErrorMessage :message=\"__(error)\" />\n                </div>\n              </div>\n              <div class=\"flex gap-1.5\">\n                <Button\n                  v-if=\"contact.data.actual_mobile_no\"\n                  :label=\"__('Make Call')\"\n                  size=\"sm\"\n                  @click=\"\n                    callEnabled && makeCall(contact.data.actual_mobile_no)\n                  \"\n                >\n                  <template #prefix>\n                    <PhoneIcon class=\"h-4 w-4\" />\n                  </template>\n                </Button>\n                <Button\n                  :label=\"__('Delete')\"\n                  theme=\"red\"\n                  size=\"sm\"\n                  @click=\"deleteContact\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"trash-2\" class=\"h-4 w-4\" />\n                  </template>\n                </Button>\n              </div>\n            </div>\n          </template>\n        </FileUploader>\n      </div>\n      <div\n        v-if=\"fieldsLayout.data\"\n        class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n      >\n        <div class=\"flex flex-col overflow-y-auto\">\n          <div\n            v-for=\"(section, i) in fieldsLayout.data\"\n            :key=\"section.label\"\n            class=\"flex flex-col p-3\"\n            :class=\"{ 'border-b': i !== fieldsLayout.data.length - 1 }\"\n          >\n            <Section :is-opened=\"section.opened\" :label=\"section.label\">\n              <template #actions>\n                <Button\n                  v-if=\"i == 0 && isManager()\"\n                  variant=\"ghost\"\n                  class=\"w-7\"\n                  @click=\"showSidePanelModal = true\"\n                >\n                  <EditIcon class=\"h-4 w-4\" />\n                </Button>\n              </template>\n              <SectionFields\n                v-if=\"section.fields\"\n                :fields=\"section.fields\"\n                :isLastSection=\"i == fieldsLayout.data.length - 1\"\n                v-model=\"contact.data\"\n                @update=\"updateField\"\n              />\n            </Section>\n          </div>\n        </div>\n      </div>\n    </Resizer>\n    <Tabs class=\"overflow-hidden\" v-model=\"tabIndex\" :tabs=\"tabs\">\n      <template #tab=\"{ tab, selected }\">\n        <button\n          class=\"group flex items-center gap-2 border-b border-transparent py-2.5 text-base text-gray-600 duration-300 ease-in-out hover:border-gray-400 hover:text-gray-900\"\n          :class=\"{ 'text-gray-900': selected }\"\n        >\n          <component v-if=\"tab.icon\" :is=\"tab.icon\" class=\"h-5\" />\n          {{ __(tab.label) }}\n          <Badge\n            class=\"group-hover:bg-gray-900\"\n            :class=\"[selected ? 'bg-gray-900' : 'bg-gray-600']\"\n            variant=\"solid\"\n            theme=\"gray\"\n            size=\"sm\"\n          >\n            {{ tab.count }}\n          </Badge>\n        </button>\n      </template>\n      <template #default=\"{ tab }\">\n        <OpportunitiesListView\n          v-if=\"tab.label === 'Opportunities' && rows.length\"\n          class=\"mt-4\"\n          :rows=\"rows\"\n          :columns=\"columns\"\n          :options=\"{ selectable: false, showTooltip: false }\"\n        />\n        <div\n          v-if=\"!rows.length\"\n          class=\"grid flex-1 place-items-center text-xl font-medium text-gray-500\"\n        >\n          <div class=\"flex flex-col items-center justify-center space-y-3\">\n            <component :is=\"tab.icon\" class=\"!h-10 !w-10\" />\n            <div>{{ __('No {0} Found', [__(tab.label)]) }}</div>\n          </div>\n        </div>\n      </template>\n    </Tabs>\n  </div>\n  <SidePanelModal\n    v-if=\"showSidePanelModal\"\n    v-model=\"showSidePanelModal\"\n    doctype=\"Contact\"\n    @reload=\"() => fieldsLayout.reload()\"\n  />\n  <AddressModal v-model=\"showAddressModal\" v-model:address=\"_address\" />\n</template>\n\n<script setup>\nimport Resizer from '@/components/Resizer.vue'\nimport Icon from '@/components/Icon.vue'\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport CameraIcon from '@/components/Icons/CameraIcon.vue'\nimport OpportunitiesIcon from '@/components/Icons/OpportunitiesIcon.vue'\nimport OpportunitiesListView from '@/components/ListViews/OpportunitiesListView.vue'\nimport SidePanelModal from '@/components/Settings/SidePanelModal.vue'\nimport AddressModal from '@/components/Modals/AddressModal.vue'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatNumberIntoCurrency,\n  createToast,\n} from '@/utils'\nimport { getView } from '@/utils/view'\nimport { globalStore } from '@/stores/global.js'\nimport { usersStore } from '@/stores/users.js'\nimport { customersStore } from '@/stores/customers.js'\nimport { statusesStore } from '@/stores/statuses'\nimport { callEnabled } from '@/composables/settings'\nimport {\n  Breadcrumbs,\n  Avatar,\n  FileUploader,\n  Tabs,\n  call,\n  createResource,\n  usePageMeta,\n  Dropdown,\n} from 'frappe-ui'\nimport { ref, computed, h } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst { $dialog, makeCall } = globalStore()\n\nconst { getUser, isManager } = usersStore()\nconst { getCustomer } = customersStore()\nconst { getDealStatus } = statusesStore()\n\nconst props = defineProps({\n  contactId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst showAddressModal = ref(false)\nconst showSidePanelModal = ref(false)\nconst _contact = ref({})\nconst _address = ref({})\n\nconst contact = createResource({\n  url: 'next_crm.api.contact.get_contact',\n  cache: ['contact', props.contactId],\n  params: {\n    name: props.contactId,\n  },\n  auto: true,\n  transform: (data) => {\n    return {\n      ...data,\n      actual_mobile_no: data.mobile_no,\n      mobile_no: data.mobile_no,\n    }\n  },\n})\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Contacts'), route: { name: 'Contacts' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'Contact')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Contacts',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: contact.data?.full_name,\n    route: { name: 'Contact', params: { contactId: props.contactId } },\n  })\n  return items\n})\n\nusePageMeta(() => {\n  return {\n    title: contact.data?.full_name || contact.data?.name,\n  }\n})\n\nfunction validateFile(file) {\n  let extn = file.name.split('.').pop().toLowerCase()\n  if (!['png', 'jpg', 'jpeg'].includes(extn)) {\n    return __('Only PNG and JPG images are allowed')\n  }\n}\n\nasync function changeContactImage(file) {\n  await call('frappe.client.set_value', {\n    doctype: 'Contact',\n    name: props.contactId,\n    fieldname: 'image',\n    value: file?.file_url || '',\n  })\n  contact.reload()\n}\n\nasync function deleteContact() {\n  $dialog({\n    title: __('Delete contact'),\n    message: __('Are you sure you want to delete this contact?'),\n    actions: [\n      {\n        label: __('Delete'),\n        theme: 'red',\n        variant: 'solid',\n        async onClick(close) {\n          await call('frappe.client.delete', {\n            doctype: 'Contact',\n            name: props.contactId,\n          })\n          close()\n          router.push({ name: 'Contacts' })\n        },\n      },\n    ],\n  })\n}\n\nconst tabIndex = ref(0)\nconst tabs = [\n  {\n    label: 'Opportunities',\n    icon: h(OpportunitiesIcon, { class: 'h-4 w-4' }),\n    count: computed(() => opportunities.data?.length),\n  },\n]\n\nconst opportunities = createResource({\n  url: 'next_crm.api.contact.get_linked_opportunities',\n  cache: ['opportunities', props.contactId],\n  params: {\n    contact: props.contactId,\n  },\n  auto: true,\n})\n\nconst rows = computed(() => {\n  if (!opportunities.data || opportunities.data == []) return []\n\n  return opportunities.data.map((row) => getOpportunityRowObject(row))\n})\n\nconst fieldsLayout = createResource({\n  url: 'next_crm.api.doc.get_sidebar_fields',\n  cache: ['fieldsLayout', props.contactId],\n  params: { doctype: 'Contact', name: props.contactId },\n  auto: true,\n  transform: (data) => getParsedFields(data),\n})\n\nfunction getParsedFields(data) {\n  return data.map((section) => {\n    return {\n      ...section,\n      fields: computed(() =>\n        section.fields.map((field) => {\n          if (field.name === 'email_id') {\n            return {\n              ...field,\n              type: 'dropdown',\n              options:\n                contact.data?.email_ids?.map((email) => {\n                  return {\n                    name: email.name,\n                    value: email.email_id,\n                    selected: email.email_id === contact.data.email_id,\n                    placeholder: 'john@doe.com',\n                    onClick: () => {\n                      _contact.value.email_id = email.email_id\n                      setAsPrimary('email', email.email_id)\n                    },\n                    onSave: (option, isNew) => {\n                      if (isNew) {\n                        createNew('email', option.value)\n                        if (contact.data.email_ids.length === 1) {\n                          _contact.value.email_id = option.value\n                        }\n                      } else {\n                        editOption(\n                          'Contact Email',\n                          option.name,\n                          'email_id',\n                          option.value,\n                        )\n                      }\n                    },\n                    onDelete: async (option, isNew) => {\n                      contact.data.email_ids = contact.data.email_ids.filter(\n                        (email) => email.name !== option.name,\n                      )\n                      !isNew &&\n                        (await deleteOption('Contact Email', option.name))\n                      if (_contact.value.email_id === option.value) {\n                        if (contact.data.email_ids.length === 0) {\n                          _contact.value.email_id = ''\n                        } else {\n                          _contact.value.email_id = contact.data.email_ids.find(\n                            (email) => email.is_primary,\n                          )?.email_id\n                        }\n                      }\n                    },\n                  }\n                }) || [],\n              create: () => {\n                contact.data?.email_ids?.push({\n                  name: 'new-1',\n                  value: '',\n                  selected: false,\n                  isNew: true,\n                })\n              },\n            }\n          } else if (field.name === 'mobile_no') {\n            return {\n              ...field,\n              type: 'dropdown',\n              options:\n                contact.data?.phone_nos?.map((phone) => {\n                  return {\n                    name: phone.name,\n                    value: phone.phone,\n                    selected: phone.phone === contact.data.actual_mobile_no,\n                    onClick: () => {\n                      _contact.value.actual_mobile_no = phone.phone\n                      _contact.value.mobile_no = phone.phone\n                      setAsPrimary('mobile_no', phone.phone)\n                    },\n                    onSave: (option, isNew) => {\n                      if (isNew) {\n                        createNew('phone', option.value)\n                        if (contact.data.phone_nos.length === 1) {\n                          _contact.value.actual_mobile_no = option.value\n                        }\n                      } else {\n                        editOption(\n                          'Contact Phone',\n                          option.name,\n                          'phone',\n                          option.value,\n                        )\n                      }\n                    },\n                    onDelete: async (option, isNew) => {\n                      contact.data.phone_nos = contact.data.phone_nos.filter(\n                        (phone) => phone.name !== option.name,\n                      )\n                      !isNew &&\n                        (await deleteOption('Contact Phone', option.name))\n                      if (_contact.value.actual_mobile_no === option.value) {\n                        if (contact.data.phone_nos.length === 0) {\n                          _contact.value.actual_mobile_no = ''\n                        } else {\n                          _contact.value.actual_mobile_no =\n                            contact.data.phone_nos.find(\n                              (phone) => phone.is_primary_mobile_no,\n                            )?.phone\n                        }\n                      }\n                    },\n                  }\n                }) || [],\n              create: () => {\n                contact.data?.phone_nos?.push({\n                  name: 'new-1',\n                  value: '',\n                  selected: false,\n                  isNew: true,\n                })\n              },\n            }\n          } else if (field.name === 'address') {\n            return {\n              ...field,\n              create: (value, close) => {\n                _contact.value.address = value\n                _address.value = {}\n                showAddressModal.value = true\n                close()\n              },\n              edit: async (addr) => {\n                _address.value = await call('frappe.client.get', {\n                  doctype: 'Address',\n                  name: addr,\n                })\n                showAddressModal.value = true\n              },\n            }\n          } else {\n            return field\n          }\n        }),\n      ),\n    }\n  })\n}\n\nasync function setAsPrimary(field, value) {\n  let d = await call('next_crm.api.contact.set_as_primary', {\n    contact: contact.data.name,\n    field,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    createToast({\n      title: 'Contact updated',\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function createNew(field, value) {\n  if (!value) return\n  let d = await call('next_crm.api.contact.create_new', {\n    contact: contact.data.name,\n    field,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    createToast({\n      title: 'Contact updated',\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function editOption(doctype, name, fieldname, value) {\n  let d = await call('frappe.client.set_value', {\n    doctype,\n    name,\n    fieldname,\n    value,\n  })\n  if (d) {\n    contact.reload()\n    createToast({\n      title: 'Contact updated',\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function deleteOption(doctype, name) {\n  await call('frappe.client.delete', {\n    doctype,\n    name,\n  })\n  await contact.reload()\n  createToast({\n    title: 'Contact updated',\n    icon: 'check',\n    iconClasses: 'text-green-600',\n  })\n}\n\nasync function updateField(fieldname, value) {\n  await call('frappe.client.set_value', {\n    doctype: 'Contact',\n    name: props.contactId,\n    fieldname,\n    value,\n  })\n  createToast({\n    title: 'Contact updated',\n    icon: 'check',\n    iconClasses: 'text-green-600',\n  })\n\n  contact.reload()\n}\n\nconst columns = computed(() => opportunityColumns)\n\nfunction getOpportunityRowObject(opportunity) {\n  return {\n    name: opportunity.name,\n    customer: {\n      label: opportunity.customer,\n      logo: getCustomer(opportunity.customer)?.image,\n    },\n    opportunity_amount: formatNumberIntoCurrency(\n      opportunity.opportunity_amount,\n      opportunity.currency,\n    ),\n    status: {\n      label: opportunity.status,\n      color: getDealStatus(opportunity.status)?.iconColorClass,\n    },\n    email: opportunity.email,\n    mobile_no: opportunity.mobile_no,\n    opportunity_owner: {\n      label: opportunity.opportunity_owner && getUser(opportunity.opportunity_owner).full_name,\n      ...(opportunity.opportunity_owner && getUser(opportunity.opportunity_owner)),\n    },\n    modified: {\n      label: dateFormat(opportunity.modified, dateTooltipFormat),\n      timeAgo: __(timeAgo(opportunity.modified)),\n    },\n  }\n}\n\nconst opportunityColumns = [\n  {\n    label: __('Customer'),\n    key: 'customer',\n    width: '11rem',\n  },\n  {\n    label: __('Amount'),\n    key: 'opportunity_amount',\n    width: '9rem',\n  },\n  {\n    label: __('Status'),\n    key: 'status',\n    width: '10rem',\n  },\n  {\n    label: __('Email'),\n    key: 'contact_email',\n    width: '12rem',\n  },\n  {\n    label: __('Mobile no'),\n    key: 'contact_mobile',\n    width: '11rem',\n  },\n  {\n    label: __('Opportunity owner'),\n    key: 'opportunity_owner',\n    width: '10rem',\n  },\n  {\n    label: __('Last modified'),\n    key: 'modified',\n    width: '8rem',\n  },\n]\n</script>"],"names":["$dialog","makeCall","globalStore","getUser","isManager","usersStore","getCustomer","customersStore","getDealStatus","statusesStore","props","__props","route","useRoute","router","useRouter","showAddressModal","ref","showSidePanelModal","_contact","_address","contact","createResource","data","breadcrumbs","computed","items","view","getView","_a","usePageMeta","_b","validateFile","file","extn","changeContactImage","call","deleteContact","close","tabIndex","tabs","h","OpportunitiesIcon","opportunities","rows","row","getOpportunityRowObject","fieldsLayout","getParsedFields","section","field","email","setAsPrimary","option","isNew","createNew","editOption","deleteOption","_d","_c","phone","value","addr","createToast","doctype","name","fieldname","updateField","columns","opportunityColumns","opportunity","formatNumberIntoCurrency","dateFormat","dateTooltipFormat","timeAgo"],"mappings":"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"}