{"version":3,"file":"Opportunity-7931bde5.js","sources":["../../../../frontend/src/pages/Opportunity.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"opportunity.data\">\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\">\n        <template #prefix=\"{ item }\">\n          <Icon v-if=\"item.icon\" :icon=\"item.icon\" class=\"mr-2 h-4\" />\n        </template>\n      </Breadcrumbs>\n    </template>\n    <template #right-header>\n      <CustomActions v-if=\"customActions\" :actions=\"customActions\" />\n      <component :is=\"opportunity.data._assignedTo?.length == 1 ? 'Button' : 'div'\">\n        <MultipleAvatar\n          :avatars=\"opportunity.data._assignedTo\"\n          @click=\"showAssignmentModal = true\"\n        />\n      </component>\n      <Dropdown :options=\"statusOptions('deal', updateField, customStatuses)\">\n        <template #default=\"{ open }\">\n          <Button\n            :label=\"opportunity.data.status\"\n            :class=\"getDealStatus(opportunity.data.status).colorClass\"\n          >\n            <template #prefix>\n              <IndicatorIcon />\n            </template>\n            <template #suffix>\n              <FeatherIcon\n                :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                class=\"h-4\"\n              />\n            </template>\n          </Button>\n        </template>\n      </Dropdown>\n    </template>\n  </LayoutHeader>\n  <div v-if=\"opportunity.data\" class=\"flex h-full overflow-hidden\">\n    <Tabs v-model=\"tabIndex\" :tabs=\"tabs\">\n      <Activities\n        ref=\"activities\"\n        doctype=\"Opportunity\"\n        :tabs=\"tabs\"\n        v-model:reload=\"reload\"\n        v-model:tabIndex=\"tabIndex\"\n        v-model=\"opportunity\"\n      />\n    </Tabs>\n    <Resizer side=\"right\" class=\"flex flex-col justify-between border-l\">\n      <div\n        class=\"flex h-10.5 cursor-copy items-center border-b px-5 py-2.5 text-lg font-medium\"\n        @click=\"copyToClipboard(opportunity.data.name)\"\n      >\n        {{ __(opportunity.data.name) }}\n      </div>\n      <div class=\"flex items-center justify-start gap-5 border-b p-5\">\n        <Tooltip :text=\"__('Customer logo')\">\n          <div class=\"group relative size-12\">\n            <Avatar\n              size=\"3xl\"\n              class=\"size-12\"\n              :label=\"customer.data?.name || __('Untitled')\"\n              :image=\"customer.data?.image\"\n            />\n          </div>\n        </Tooltip>\n        <div class=\"flex flex-col gap-2.5 truncate\">\n          <Tooltip :text=\"customer.data?.name || __('Set an customer')\">\n            <div class=\"truncate text-2xl font-medium\">\n              {{ customer.data?.name || __('Untitled') }}\n            </div>\n          </Tooltip>\n          <div class=\"flex gap-1.5\">\n            <Tooltip v-if=\"callEnabled\" :text=\"__('Make a call')\">\n              <Button class=\"h-7 w-7\" @click=\"triggerCall\">\n                <PhoneIcon class=\"h-4 w-4\" />\n              </Button>\n            </Tooltip>\n            <Tooltip :text=\"__('Send an email')\">\n              <Button class=\"h-7 w-7\">\n                <Email2Icon\n                  class=\"h-4 w-4\"\n                  @click=\"\n                    opportunity.data.email\n                      ? openEmailBox()\n                      : errorMessage(__('No email set'))\n                  \"\n                />\n              </Button>\n            </Tooltip>\n            <Tooltip :text=\"__('Go to website')\">\n              <Button class=\"h-7 w-7\">\n                <LinkIcon\n                  class=\"h-4 w-4\"\n                  @click=\"\n                    opportunity.data.website\n                      ? openWebsite(opportunity.data.website)\n                      : errorMessage(__('No website set'))\n                  \"\n                />\n              </Button>\n            </Tooltip>\n            <Tooltip :text=\"__('Attach a file')\">\n              <Button class=\"size-7\" @click=\"showFilesUploader = true\">\n                <AttachmentIcon class=\"size-4\" />\n              </Button>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      <SLASection\n        v-if=\"opportunity.data.sla_status\"\n        v-model=\"opportunity.data\"\n        @updateField=\"updateField\"\n      />\n      <div\n        v-if=\"fieldsLayout.data\"\n        class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n      >\n        <div class=\"flex flex-col overflow-y-auto\">\n          <div\n            v-for=\"(section, i) in fieldsLayout.data\"\n            :key=\"section.label\"\n            class=\"section flex flex-col p-3\"\n            :class=\"{ 'border-b': i !== fieldsLayout.data.length - 1 }\"\n          >\n            <Section :is-opened=\"section.opened\" :label=\"section.label\">\n              <template #actions>\n                <div v-if=\"section.contacts\" class=\"pr-2\">\n                  <Link\n                    value=\"\"\n                    doctype=\"Contact\"\n                    @change=\"(e) => addContact(e)\"\n                    :onCreate=\"\n                      (value, close) => {\n                        _contact = {\n                          first_name: value,\n                          company_name: opportunity.data.customer,\n                        }\n                        showContactModal = true\n                        close()\n                      }\n                    \"\n                  >\n                    <template #target=\"{ togglePopover }\">\n                      <Button\n                        class=\"h-7 px-3\"\n                        variant=\"ghost\"\n                        icon=\"plus\"\n                        @click=\"togglePopover()\"\n                      />\n                    </template>\n                  </Link>\n                </div>\n                <Button\n                  v-else-if=\"\n                    ((!section.contacts && i == 1) || i == 0) && isManager()\n                  \"\n                  variant=\"ghost\"\n                  class=\"w-7 mr-2\"\n                  @click=\"showSidePanelModal = true\"\n                >\n                  <EditIcon class=\"h-4 w-4\" />\n                </Button>\n              </template>\n              <SectionFields\n                v-if=\"section.fields\"\n                :fields=\"section.fields\"\n                :isLastSection=\"i == fieldsLayout.data.length - 1\"\n                v-model=\"opportunity.data\"\n                @update=\"updateField\"\n              />\n              <div v-else>\n                <div\n                  v-if=\"\n                    opportunityContacts?.loading && opportunityContacts?.data?.length == 0\n                  \"\n                  class=\"flex min-h-20 flex-1 items-center justify-center gap-3 text-base text-gray-500\"\n                >\n                  <LoadingIndicator class=\"h-4 w-4\" />\n                  <span>{{ __('Loading...') }}</span>\n                </div>\n                <div\n                  v-else-if=\"opportunityContacts?.data?.length\"\n                  v-for=\"(contact, i) in opportunityContacts.data\"\n                  :key=\"contact.name\"\n                >\n                  <div\n                    class=\"px-2 pb-2.5\"\n                    :class=\"[i == 0 ? 'pt-5' : 'pt-2.5']\"\n                  >\n                    <Section :is-opened=\"contact.opened\">\n                      <template #header=\"{ opened, toggle }\">\n                        <div\n                          class=\"flex cursor-pointer items-center justify-between gap-2 pr-1 text-base leading-5 text-gray-700\"\n                        >\n                          <div\n                            class=\"flex h-7 items-center gap-2 truncate\"\n                            @click=\"toggle()\"\n                          >\n                            <Avatar\n                              :label=\"contact.full_name\"\n                              :image=\"contact.image\"\n                              size=\"md\"\n                            />\n                            <div class=\"truncate\">\n                              {{ contact.full_name }}\n                            </div>\n                            <Badge\n                              v-if=\"contact.is_primary\"\n                              class=\"ml-2\"\n                              variant=\"outline\"\n                              :label=\"__('Primary')\"\n                              theme=\"green\"\n                            />\n                          </div>\n                          <div class=\"flex items-center\">\n                            <Dropdown :options=\"contactOptions(contact)\">\n                              <Button\n                                icon=\"more-horizontal\"\n                                class=\"text-gray-600\"\n                                variant=\"ghost\"\n                              />\n                            </Dropdown>\n                            <Button\n                              variant=\"ghost\"\n                              @click=\"\n                                router.push({\n                                  name: 'Contact',\n                                  params: { contactId: contact.name },\n                                })\n                              \"\n                            >\n                              <ArrowUpRightIcon class=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" @click=\"toggle()\">\n                              <FeatherIcon\n                                name=\"chevron-right\"\n                                class=\"h-4 w-4 text-gray-900 transition-all duration-300 ease-in-out\"\n                                :class=\"{ 'rotate-90': opened }\"\n                              />\n                            </Button>\n                          </div>\n                        </div>\n                      </template>\n                      <div\n                        class=\"flex flex-col gap-1.5 text-base text-gray-800\"\n                      >\n                        <div class=\"flex items-center gap-3 pb-1.5 pl-1 pt-4\">\n                          <Email2Icon class=\"h-4 w-4\" />\n                          {{ contact.email }}\n                        </div>\n                        <div class=\"flex items-center gap-3 p-1 py-1.5\">\n                          <PhoneIcon class=\"h-4 w-4\" />\n                          {{ contact.mobile_no }}\n                        </div>\n                      </div>\n                    </Section>\n                  </div>\n                  <div\n                    v-if=\"i != opportunityContacts.data.length - 1\"\n                    class=\"mx-2 h-px border-t border-gray-200\"\n                  />\n                </div>\n                <div\n                  v-else\n                  class=\"flex h-20 items-center justify-center text-base text-gray-600\"\n                >\n                  {{ __('No contacts added') }}\n                </div>\n              </div>\n            </Section>\n          </div>\n        </div>\n      </div>\n    </Resizer>\n  </div>\n  <CustomerModal\n    v-model=\"showCustomerModal\"\n    v-model:customer=\"_customer\"\n    :options=\"{\n      redirect: false,\n      afterInsert: (doc) => updateField('customer', doc.name),\n    }\"\n  />\n  <ContactModal\n    v-model=\"showContactModal\"\n    :contact=\"_contact\"\n    :options=\"{\n      redirect: false,\n      afterInsert: (doc) => addContact(doc.name),\n    }\"\n  />\n  <AssignmentModal\n    v-if=\"showAssignmentModal\"\n    v-model=\"showAssignmentModal\"\n    v-model:assignees=\"opportunity.data._assignedTo\"\n    :doc=\"opportunity.data\"\n    doctype=\"Opportunity\"\n  />\n  <SidePanelModal\n    v-if=\"showSidePanelModal\"\n    v-model=\"showSidePanelModal\"\n    doctype=\"Opportunity\"\n    @reload=\"() => fieldsLayout.reload()\"\n  />\n  <FilesUploader\n    v-if=\"opportunity.data?.name\"\n    v-model=\"showFilesUploader\"\n    doctype=\"Opportunity\"\n    :docname=\"opportunity.data.name\"\n    @after=\"\n      () => {\n        activities?.all_activities?.reload()\n        changeTabTo('attachments')\n      }\n    \"\n  />\n</template>\n<script setup>\nimport Icon from '@/components/Icon.vue'\nimport Resizer from '@/components/Resizer.vue'\nimport LoadingIndicator from '@/components/Icons/LoadingIndicator.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport ActivityIcon from '@/components/Icons/ActivityIcon.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport Email2Icon from '@/components/Icons/Email2Icon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport LinkIcon from '@/components/Icons/LinkIcon.vue'\nimport ArrowUpRightIcon from '@/components/Icons/ArrowUpRightIcon.vue'\nimport SuccessIcon from '@/components/Icons/SuccessIcon.vue'\nimport AttachmentIcon from '@/components/Icons/AttachmentIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport Activities from '@/components/Activities/Activities.vue'\nimport CustomerModal from '@/components/Modals/CustomerModal.vue'\nimport AssignmentModal from '@/components/Modals/AssignmentModal.vue'\nimport FilesUploader from '@/components/FilesUploader/FilesUploader.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport ContactModal from '@/components/Modals/ContactModal.vue'\nimport SidePanelModal from '@/components/Settings/SidePanelModal.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport SLASection from '@/components/SLASection.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport {\n  openWebsite,\n  createToast,\n  setupAssignees,\n  setupCustomizations,\n  errorMessage,\n  copyToClipboard,\n} from '@/utils'\nimport { getView } from '@/utils/view'\nimport { globalStore } from '@/stores/global'\nimport { statusesStore } from '@/stores/statuses'\nimport { usersStore } from '@/stores/users'\nimport { whatsappEnabled, callEnabled } from '@/composables/settings'\nimport {\n  createResource,\n  Dropdown,\n  Tooltip,\n  Avatar,\n  Tabs,\n  Breadcrumbs,\n  call,\n  usePageMeta,\n} from 'frappe-ui'\nimport { ref, computed, h, onMounted, onBeforeUnmount } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useActiveTabManager } from '@/composables/useActiveTabManager'\n\nconst { $dialog, $socket, makeCall } = globalStore()\nconst { statusOptions, getDealStatus } = statusesStore()\nconst { isManager } = usersStore()\nconst route = useRoute()\nconst router = useRouter()\n\nconst props = defineProps({\n  opportunityId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst customActions = ref([])\nconst customStatuses = ref([])\n\nconst opportunity = createResource({\n  url: '/api/method/next_crm.api.opportunity.get_opportunity',\n  params: { name: props.opportunityId },\n  cache: ['opportunity', props.opportunityId],\n  onSuccess: async (data) => {\n    if (data.customer) {\n      customer.update({\n        params: { doctype: 'Customer', name: data.customer },\n      })\n      customer.fetch()\n    }\n\n    let obj = {\n      doc: data,\n      $dialog,\n      $socket,\n      router,\n      updateField,\n      createToast,\n      deleteDoc: deleteOpportunity,\n      resource: {\n        opportunity,\n        opportunityContacts,\n        fieldsLayout,\n      },\n      call,\n    }\n    setupAssignees(data)\n    let customization = await setupCustomizations(data, obj)\n    customActions.value = customization.actions || []\n    customStatuses.value = customization.statuses || []\n  },\n})\n\nconst customer = createResource({\n  url: 'frappe.client.get',\n  onSuccess: (data) => (opportunity.data._customersObj = data),\n})\n\nonMounted(() => {\n  $socket.on('crm_customer_created', () => {\n    createToast({\n      title: __('Customer created successfully'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  })\n\n  if (opportunity.data) {\n    customer.data = opportunity.data._customersObj\n    return\n  }\n  opportunity.fetch()\n})\n\nonBeforeUnmount(() => {\n  $socket.off('crm_customer_created')\n})\n\nconst reload = ref(false)\nconst showCustomerModal = ref(false)\nconst showAssignmentModal = ref(false)\nconst showSidePanelModal = ref(false)\nconst showFilesUploader = ref(false)\nconst _customer = ref({})\n\nfunction updateOpportunity(fieldname, value, callback) {\n  value = Array.isArray(fieldname) ? '' : value\n\n  if (validateRequired(fieldname, value)) return\n\n  createResource({\n    url: 'frappe.client.set_value',\n    params: {\n      doctype: 'Opportunity',\n      name: props.opportunityId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      opportunity.reload()\n      reload.value = true\n      createToast({\n        title: __('Opportunity updated'),\n        icon: 'check',\n        iconClasses: 'text-green-600',\n      })\n      callback?.()\n    },\n    onError: (err) => {\n      createToast({\n        title: __('Error updating opportunity'),\n        text: __(err.messages?.[0]),\n        icon: 'x',\n        iconClasses: 'text-red-600',\n      })\n    },\n  })\n}\n\nfunction validateRequired(fieldname, value) {\n  let meta = opportunity.data.fields_meta || {}\n  if (meta[fieldname]?.reqd && !value) {\n    createToast({\n      title: __('Error Updating Opportunity'),\n      text: __('{0} is a required field', [meta[fieldname].label]),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return true\n  }\n  return false\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Opportunities'), route: { name: 'Opportunities' } }]\n\n  if (route.query.view || route.query.viewType) {\n    let view = getView(route.query.view, route.query.viewType, 'Opportunity')\n    if (view) {\n      items.push({\n        label: __(view.label),\n        icon: view.icon,\n        route: {\n          name: 'Opportunities',\n          params: { viewType: route.query.viewType },\n          query: { view: route.query.view },\n        },\n      })\n    }\n  }\n\n  items.push({\n    label: customer.data?.name || __('Untitled'),\n    route: { name: 'Opportunity', params: { opportunityId: opportunity.data.name } },\n  })\n  return items\n})\n\nusePageMeta(() => {\n  return {\n    title: customer.data?.name || opportunity.data?.name,\n  }\n})\n\nconst tabs = computed(() => {\n  let tabOptions = [\n    {\n      name: 'Activity',\n      label: __('Activity'),\n      icon: ActivityIcon,\n    },\n    {\n      name: 'Emails',\n      label: __('Emails'),\n      icon: EmailIcon,\n    },\n    {\n      name: 'Comments',\n      label: __('Comments'),\n      icon: CommentIcon,\n    },\n    {\n      name: 'Calls',\n      label: __('Calls'),\n      icon: PhoneIcon,\n      condition: () => callEnabled.value,\n    },\n    {\n      name: 'Tasks',\n      label: __('Tasks'),\n      icon: TaskIcon,\n    },\n    {\n      name: 'Notes',\n      label: __('Notes'),\n      icon: NoteIcon,\n    },\n    {\n      name: 'Attachments',\n      label: __('Attachments'),\n      icon: AttachmentIcon,\n    },\n    {\n      name: 'WhatsApp',\n      label: __('WhatsApp'),\n      icon: WhatsAppIcon,\n      condition: () => whatsappEnabled.value,\n    },\n  ]\n  return tabOptions.filter((tab) => (tab.condition ? tab.condition() : true))\n})\nconst { tabIndex } = useActiveTabManager(tabs, 'lastOpportunityTab')\n\nconst fieldsLayout = createResource({\n  url: 'next_crm.api.doc.get_sidebar_fields',\n  cache: ['fieldsLayout', props.opportunityId],\n  params: { doctype: 'Opportunity', name: props.opportunityId },\n  auto: true,\n  transform: (data) => getParsedFields(data),\n})\n\nfunction getParsedFields(sections) {\n  sections.forEach((section) => {\n    if (section.name == 'contacts_section') return\n    section.fields.forEach((field) => {\n      if (field.name == 'customer') {\n        field.create = (value, close) => {\n          _customer.value.customer_name = value\n          showCustomerModal.value = true\n          close()\n        }\n        field.link = (org) =>\n          router.push({\n            name: 'Customer',\n            params: { customerId: org },\n          })\n      }\n    })\n  })\n  return sections\n}\n\nconst showContactModal = ref(false)\nconst _contact = ref({})\n\nfunction contactOptions(contact) {\n  let options = [\n    {\n      label: __('Remove'),\n      icon: 'trash-2',\n      onClick: () => removeContact(contact.name),\n    },\n  ]\n\n  if (!contact.is_primary) {\n    options.push({\n      label: __('Set as Primary Contact'),\n      icon: h(SuccessIcon, { class: 'h-4 w-4' }),\n      onClick: () => setPrimaryContact(contact.name),\n    })\n  }\n\n  return options\n}\n\nasync function addContact(contact) {\n  let d = await call('next_crm.overrides.opportunity.add_contact', {\n    opportunity: props.opportunityId,\n    contact,\n  })\n  if (d) {\n    opportunityContacts.reload()\n    createToast({\n      title: __('Contact added'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function removeContact(contact) {\n  let d = await call('next_crm.overrides.opportunity.remove_contact', {\n    opportunity: props.opportunityId,\n    contact,\n  })\n  if (d) {\n    opportunityContacts.reload()\n    createToast({\n      title: __('Contact removed'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nasync function setPrimaryContact(contact) {\n  let d = await call('next_crm.overrides.opportunity.set_primary_contact', {\n    opportunity: props.opportunityId,\n    contact,\n  })\n  if (d) {\n    opportunityContacts.reload()\n    createToast({\n      title: __('Primary contact set'),\n      icon: 'check',\n      iconClasses: 'text-green-600',\n    })\n  }\n}\n\nconst opportunityContacts = createResource({\n  url: '/api/method/next_crm.api.opportunity.get_opportunity_contacts',\n  params: { name: props.opportunityId },\n  cache: ['opportunity_contacts', props.opportunityId],\n  auto: true,\n  transform: (data) => {\n    data.forEach((contact) => {\n      contact.opened = false\n    })\n    return data\n  },\n})\n\nfunction triggerCall() {\n  let primaryContact = opportunityContacts.data?.find((c) => c.is_primary)\n  let mobile_no = primaryContact.mobile_no || null\n\n  if (!primaryContact) {\n    errorMessage(__('No primary contact set'))\n    return\n  }\n\n  if (!mobile_no) {\n    errorMessage(__('No mobile number set'))\n    return\n  }\n\n  makeCall(mobile_no)\n}\n\nfunction updateField(name, value, callback) {\n  updateOpportunity(name, value, () => {\n    opportunity.data[name] = value\n    callback?.()\n  })\n}\n\nasync function deleteOpportunity(name) {\n  await call('frappe.client.delete', {\n    doctype: 'Opportunity',\n    name,\n  })\n  router.push({ name: 'Opportunities' })\n}\n\nconst activities = ref(null)\n\nfunction openEmailBox() {\n  activities.value.emailBox.show = true\n}\n</script>\n\n<style scoped>\n:deep(.section:has(.section-field.hidden)) {\n  display: none;\n}\n:deep(.section:has(.section-field:not(.hidden))) {\n  display: flex;\n}\n</style>\n"],"names":["$dialog","$socket","makeCall","globalStore","statusOptions","getDealStatus","statusesStore","isManager","usersStore","route","useRoute","router","useRouter","props","__props","customActions","ref","customStatuses","opportunity","createResource","data","customer","obj","updateField","createToast","deleteOpportunity","opportunityContacts","fieldsLayout","call","setupAssignees","customization","setupCustomizations","onMounted","onBeforeUnmount","reload","showCustomerModal","showAssignmentModal","showSidePanelModal","showFilesUploader","_customer","updateOpportunity","fieldname","value","callback","validateRequired","err","_a","meta","breadcrumbs","computed","items","view","getView","usePageMeta","_b","tabs","ActivityIcon","EmailIcon","CommentIcon","PhoneIcon","callEnabled","TaskIcon","NoteIcon","AttachmentIcon","WhatsAppIcon","whatsappEnabled","tab","tabIndex","useActiveTabManager","getParsedFields","sections","section","field","close","org","showContactModal","_contact","contactOptions","contact","options","removeContact","h","SuccessIcon","setPrimaryContact","addContact","triggerCall","primaryContact","c","mobile_no","errorMessage","name","activities","openEmailBox"],"mappings":"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"}